#tables
package_info={packageOwner, }
 - packageOwner : MW, HW, BEHAIORTREE, NAVI, SLAM, DRV, PLATFORM, TALKUI, SOUNDAI, VISIONAI
 - packageType : apk, py, jar, bin,
 - register : mac-address
 
deploy_history

drop table TBL_PACKAGE_INFO;
CREATE TABLE TBL_PACKAGE_INFO(
  id    		char varying(64) primary key,
  type  		char varying(50) not null,
  name  		char varying(200) not null,
  owner 		char varying(100) not null,
  department char varying(50) not null,
  version   	char varying(32) not null,
  register  	char varying(100),
  registDate 	timestamp,
  size			bigint,
  fileFormat    char(10),
  filePath      varchar(500),
  hashcode      varchar(64),
  description   varchar(500)
  );
  
 drop table robot;
 create table tbl_robot(
   id   varchar(64) primary key, 
   name  varchar(100),
   alias varchar(100),
   model  varchar(30),
   type   varchar(30),
   serial varchar(64),
   isUse  char(2),
   birthdate  timestamp,
   workstartdate timestamp,
   ip   varchar(64)
 );
  
   
  
####

\du : user list
\dt : table list
\dg : list roles
\di : list index
\db : list table space
\l  : list database


 \c[onnect] {[DBNAME|- USER|- HOST|- PORT|-] | conninfo}
 \c robot robotqat

https://judo0179.tistory.com/96

$ docker exec -it postgres /bin/bash

root@ac61c662ee4c:/# psql -U postgres
psql (13.0 (Debian 13.0-1.pgdg100+1))
Type "help" for help.

postgres=# CREATE USER seongwon PASSWORD '1q2w3e4r' SUPERUSER;
CREATE ROLE

postgres=# CREATE DATABASE test OWNER seongwon;
CREATE DATABASE

postgres=# \c test seongwon
You are now connected to database "test" as user "seongwon".
test=# CREATE TABLE star (
id integer NOT NULL,
name character varying(255),
class character varying(32),
age integer,
radius integer,
lum integer,
magnt integer,
CONSTRAINT star_pk PRIMARY KEY (id)
);
CREATE TABLE

test=# \dt
        List of relations
 Schema | Name | Type  |  Owner
--------+------+-------+----------
 public | star | table | seongwon
(1 row)


psql
